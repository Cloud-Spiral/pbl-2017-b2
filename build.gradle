    providedCompile 'javax.websocket:javax.websocket-api:1.1'
    
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.25.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.exparity:hamcrest-date:2.0.4'
}

def path = "/facitter"

task deployLocal(type: Exec, dependsOn: [war]) {
	group = 'Build'
	description = 'Deploy the generated war to Tomcat.'

    def auth = "${config.username}:${config.password}"
    def targetPath = "/manager/text/deploy?path=${path}&update=true"
    def url = "${config.protocol}://${auth}@${config.hostname}:${config.portnumber}${targetPath}"

	// print "${config.curlpath} --upload-file build/libs/${rootProject.name}.war ${url}"
    commandLine "${config.curlpath}", "--upload-file", "build/libs/${rootProject.name}.war", "${url}"
}

jacoco {
    toolVersion = "0.7.9"
}

test.doLast {
    tasks.jacocoTestReport.execute()
}
